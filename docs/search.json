[{"fullname": "training", "modulename": "training", "qualname": "", "type": "module", "doc": "<p>This module can be used to create an MLP, train it on linear functions, save it, and plot the results. So far, 1D to 1D\nand 2D to 2D functions are supported</p>\n"}, {"fullname": "training.train1d", "modulename": "training", "qualname": "train1d", "type": "function", "doc": "<p>Create an MLP, train it on the 1D to 1D function <code>func_class</code>, save it, and plot the results</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>func_class :\n             must contain a static, 1D to 1D function <code>f</code> and a <code>name</code> attribute</p>\n", "parameters": ["func_class"], "funcdef": "def"}, {"fullname": "training.train2d", "modulename": "training", "qualname": "train2d", "type": "function", "doc": "<p>Create an MLP, train it on the 2D to 2D function <code>func_class</code>, save it, and plot the results</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>func_class :\n             must contain a static, 2D to 2D function <code>f</code> and a <code>name</code> attribute</p>\n", "parameters": ["func_class"], "funcdef": "def"}, {"fullname": "training.open_model", "modulename": "training", "qualname": "open_model", "type": "function", "doc": "<p>Print the saved model/parameters of an MLP trained on <code>func_class</code> if the model was trained on <code>func_class</code> already</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>func_class :\n             function for which the model should be printed</p>\n", "parameters": ["func_class"], "funcdef": "def"}]